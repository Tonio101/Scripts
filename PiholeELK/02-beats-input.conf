input {
  beats {
    port => 5044
  }
}

# Apr 19 21:50:00 pihole pihole Apr 19 21:50:00 dnsmasq[668]: query[A] clientsettingscdn.roblox.com from 192.168.1.1
# Apr 19 23:03:12 pihole pihole Apr 19 23:03:12 dnsmasq[668]: reply stopandshop.com is 104.16.196.14
# Apr 19 23:22:15 pihole pihole Apr 19 23:22:15 dnsmasq[668]: cached clients4.google.com is <CNAME>
# Apr 19 23:49:26 pihole pihole Apr 19 23:49:26 dnsmasq[668]: forwarded safebrowsing.googleapis.com to 8.8.4.4
# Apr 28 22:04:15 dnsmasq[91515]: reply pull-fcdn-base-oversea.s.worldfcdn.com is <CNAME>

filter {
    grok {


        match => { "message" => "^%{SYSLOGTIMESTAMP:timestamp}\s+%{WORD:QuerySrc}\[%{POSINT:pid}\]:\s+%{WORD:DNSType}\[%{WORD:DNSRecord}\]\s+%{GREEDYDATA:DNSQueryURL}\s+from\s+%{IP:SourceIP}" }
        match => { "message" => "^%{SYSLOGTIMESTAMP:timestamp}\s+%{WORD:QuerySrc}\[%{POSINT:pid}\]:\s+%{WORD:DNSType}%{GREEDYDATA:DNSReplyURL}\s+is\s+(%{IP:DNSResolvedIP})?(<?%{WORD:DNSAnswerType}>|%{GREEDYDATA:DNSAnswerType})?" }
        match => { "message" => "^%{SYSLOGTIMESTAMP:timestamp}\s+%{WORD:QuerySrc}\[%{POSINT:pid}\]:\s+%{WORD:DNSType}%{GREEDYDATA:DNSForwardedURL}\s+to\s+%{IP:DNSFordwarder}" }
    }

    mutate {
      add_tag => [ "pihole" ]
    }
}
